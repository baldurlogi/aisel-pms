name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: johndoe
          POSTGRES_PASSWORD: randompassword
          POSTGRES_DB: mydb
        options: >-
          --health-cmd "pg_isready --username=johndoe"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install


      - name: Install postgresql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U johndoe -d mydb; then
              echo "Postgres is ready"
              break
            else
              echo "Waiting for Postgres to be ready..."
              sleep 2
            fi
          done

      - name: Run Prisma migrations
        working-directory: ./apps/api
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma migrate deploy --schema=src/prisma/schema.prisma

      #- name: ‚úÖ Lint
      #  run: pnpm -F api lint

      - name: Generate Prisma Client
        working-directory: ./apps/api
        run: npx prisma generate --schema=src/prisma/schema.prisma

      - name: üß™ Test
        run: pnpm -F api test

      - name: üõ†Ô∏è Build
        run: pnpm -F api build

      - name: Print DATABASE_URL
        run: echo $DATABASE_URL

      - name: Run E2E Tests
        run: pnpm -F api test:e2e
