name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: johndoe
          POSTGRES_PASSWORD: randompassword
          POSTGRES_DB: mydb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    env:
      DATABASE_URL: postgresql://johndoe:randompassword@db:5432/mydb?schema=public

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: Debug network to db
        run: |
          ping -c 4 db
          nc -zv db 5432 || echo "Port 5432 not open yet"

      - name: Wait for Postgres health check
        run: |
          for i in {1..30}; do
            status=$(docker inspect --format='{{.State.Health.Status}}' ${{ job.services.db.id }})
            echo "Postgres health status: $status"
            if [ "$status" = "healthy" ]; then
              echo "Postgres is healthy"
              break
            fi
            sleep 2
          done

      - name: Print Postgres logs if not healthy
        if: failure()
        run: docker logs ${{ job.services.db.id }}

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install

      #- name: ✅ Lint
      #  run: pnpm -F api lint

      - name: Generate Prisma Client
        run: pnpm --filter api prisma generate

      - name: 🧪 Test
        run: pnpm -F api test

      - name: 🛠️ Build
        run: pnpm -F api build

      - name: Print DATABASE_URL
        run: echo $DATABASE_URL

      - name: Run E2E Tests
        run: pnpm -F api test:e2e
